prev = 0:ni/ni
) %>%
arrange(prev) %>%
mutate(
cdf = cumsum(prob),
p_cdf = propi*cdf
)
}
}) %>%
select(-cdf, -prob) %>%
spread(group, p_cdf) %>%
arrange(prev) %>%
mutate(
mix_cdf = sapply(1:nrow(.), function(i){
g_cols <- 2:ncol(.)
sum(sapply(g_cols, function(g){
max(.[1:i, g], na.rm = T)
}))
})
)
lower <- cdf$mix_cdf <= 0.025
upper <- cdf$mix_cdf >= 0.975
lower <- ifelse(sum(lower) > 0, max(cdf$prev[lower]), cdf$prev[1])
upper <- ifelse(upper[nrow(cdf)], min(cdf$prev[upper]), 1)
}
names(lower) <- "lower"
names(upper) <- "upper"
return(c(lower, upper))
}
predictive_distn <- function(name, modeldf, zeros=FALSE){
fits <- run_fits(name, modeldf, zeros)
imputed_idx <- fits$dat$data$Site == "Imputed Site"
missing_weights <- fits$dat$data %>%
filter(Site != "Imputed Site") %>%
group_by(Missing) %>%
summarise(n_sites = Site %>% unique %>% length) %>%
# summarise(n_sites = n()) %>%
ungroup() %>%
mutate(p_sites = n_sites/sum(n_sites),
Missing = as.character(Missing))
fits$dat$data$Missing <- as.character(fits$dat$data$Missing)
years_to_include <- fits$dat$data %>%
filter(Year != 1980, HIV.p > 0, Site != "Imputed Site") %>%
select(Year, Missing) %>% unique
predicted <- map_df(fits$fits, function(fit){
imputed <- fit$fit$summary.fitted.values[, c("mean", "0.025quant", "0.975quant")] %>%
cbind(fits$dat$data[,c("Missing",  "Year")]) %>%
filter(imputed_idx)
mix <- imputed %>%
full_join(missing_weights, by = c("Missing")) %>%
mutate(p_mean = p_sites * mean
)  %>% select(Year, Missing, p_mean)
mix_mean <- mix %>%
right_join(years_to_include, by = c("Year", "Missing")) %>%
spread(Missing, p_mean) %>%
mutate(
mean = apply(.[,2:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
}),
model = fit$model
)
a <- inla.posterior.sample(result = fit$fit, n = 1000)
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(sampleno = rep(1:1000, each = sum(imputed_idx)),
p_mean = p_sites * prev) %>%
select(-prev, -n_sites, -p_sites) %>%
right_join(years_to_include, by = c("Year", "Missing"))
b <- samples %>% spread(Missing, p_mean) %>%
mutate(mean_mix = apply(.[,3:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
})) %>%
group_by(Year) %>%
nest() %>%
mutate(
cdf = map(data, function(d) {
if (is.na(d$mean_mix[1])) return(NA)
ecdf(d$mean_mix)
}),
lower = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.025)
}),
upper = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.975)
}),
lower2 = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.05)
}),
upper2 = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.95)
})) %>%
unnest(upper, lower) %>%
select(Year, upper, lower, upper2, lower2) %>%
full_join(mix_mean)
})
estimates <- map_df(fits$fits, function(f){
f$fit$summary.fitted.values[, c("mean", "0.025quant", "0.975quant")] %>%
cbind(fits$dat$data[,c("Missing",  "Year")]) %>%
filter(imputed_idx) %>%
select(Missing, Year, mean) %>%
mutate(model = f$model)
}) %>%
right_join(years_to_include, by = c("Year", "Missing"))
p <- ggplot(fits$dat$data, aes(x = Year)) +
geom_point(aes(y = prev, color = Missing), alpha = 0.5) +
geom_line(data = estimates, aes(y = mean, color = Missing)) +
geom_line(data = predicted, aes(y = mean)) +
facet_wrap(~model) +
geom_ribbon(data = predicted, aes(ymin = lower, ymax = upper),
alpha = 0.2) +
geom_ribbon(data = predicted, aes(ymin = lower2, ymax = upper2),
alpha = 0.2) +
theme_minimal() +
labs(title = "Prediction for new site")
return(list(plot = p, table = missing_weights))
}
name <- "Botswana"
df <- print_comparison_df(name)
zeros = T
modeldf <- df$df
fits <- run_fits(name, modeldf, zeros)
fits <- run_fits(name, modeldf, zeros)
imputed_idx <- fits$dat$data$Site == "Imputed Site"
missing_weights <- fits$dat$data %>%
filter(Site != "Imputed Site") %>%
group_by(Missing) %>%
summarise(n_sites = Site %>% unique %>% length) %>%
# summarise(n_sites = n()) %>%
ungroup() %>%
mutate(p_sites = n_sites/sum(n_sites),
Missing = as.character(Missing))
fits$dat$data$Missing <- as.character(fits$dat$data$Missing)
years_to_include <- fits$dat$data %>%
filter(Year != 1980, HIV.p > 0, Site != "Imputed Site") %>%
select(Year, Missing) %>% unique
missing_weights <- fits$dat$data %>%
filter(Site != "Imputed Site") %>%
group_by(Missing) %>%
summarise(
n_sites = Site %>% unique %>% length,
mean_size = mean(size)) %>%
# summarise(n_sites = n()) %>%
ungroup() %>%
mutate(p_sites = n_sites/sum(n_sites),
Missing = as.character(Missing))
fit <- fits$fits[[1]]
imputed <- fit$fit$summary.fitted.values[, c("mean", "0.025quant", "0.975quant")] %>%
cbind(fits$dat$data[,c("Missing",  "Year")]) %>%
filter(imputed_idx)
mix <- imputed %>%
full_join(missing_weights, by = c("Missing")) %>%
mutate(p_mean = p_sites * mean
)  %>% select(Year, Missing, p_mean)
mix_mean <- mix %>%
right_join(years_to_include, by = c("Year", "Missing")) %>%
spread(Missing, p_mean) %>%
mutate(
mean = apply(.[,2:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
}),
model = fit$model
)
a <- inla.posterior.sample(result = fit$fit, n = 1000)
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(sampleno = rep(1:1000, each = sum(imputed_idx)),
p_mean = p_sites * prev)
View(samples)
missing_weights <- fits$dat$data %>%
filter(Site != "Imputed Site") %>%
group_by(Missing) %>%
summarise(
n_sites = Site %>% unique %>% length,
mean_size = mean(size, na.rm = T)) %>%
# summarise(n_sites = n()) %>%
ungroup() %>%
mutate(p_sites = n_sites/sum(n_sites),
Missing = as.character(Missing))
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(sampleno = rep(1:1000, each = sum(imputed_idx)),
p_mean = p_sites * prev)
missing_weights <- fits$dat$data %>%
filter(Site != "Imputed Site") %>%
group_by(Missing) %>%
summarise(
n_sites = Site %>% unique %>% length,
mean_size = mean(size, na.rm = T) %>% round) %>%
# summarise(n_sites = n()) %>%
ungroup() %>%
mutate(p_sites = n_sites/sum(n_sites),
Missing = as.character(Missing))
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(sampleno = rep(1:1000, each = sum(imputed_idx)),
p_mean = p_sites * prev)
?rbinom
rbinom(449, 449, 0.08409441) %>% View
rbinom(449, 449, 0.08409441) %>% View %>% sum() %>% `/`(449)
rbinom(449, 449, 0.08409441) %>% sum() %>% `/`(449)
rbinom(449, 449, 0.08409441) %>% sum()
rbinom(1, 449, 0.08409441)
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(
sampleno = rep(1:1000, each = sum(imputed_idx)),
sample_prev = map2_dbl(mean_size, prev, function(size, prev) {
rbinom(1, size, prev)/size
}
))
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(
sampleno = rep(1:1000, each = sum(imputed_idx)),
sample_prev = map2_dbl(mean_size, prev, function(size, prev) {
rbinom(1, size, prev)/size
}),
p_mean = p_sites * sample_prev
) %>%
select(-prev, -n_sites, -p_sites, - sample_prev) %>%
right_join(years_to_include, by = c("Year", "Missing"))
b <- samples %>% spread(Missing, p_mean) %>%
mutate(mean_mix = apply(.[,3:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
}))
View(b)
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(
sampleno = rep(1:1000, each = sum(imputed_idx)),
sample_prev = map2_dbl(mean_size, prev, function(size, prev) {
rbinom(1, size, prev)/size
}),
p_mean = p_sites * sample_prev
) %>%
select(-prev, -n_sites, -p_sites, - sample_prev, -mean_size) %>%
right_join(years_to_include, by = c("Year", "Missing"))
b <- samples %>% spread(Missing, p_mean) %>%
mutate(mean_mix = apply(.[,3:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
}))
predicted <- map_df(fits$fits, function(fit){
imputed <- fit$fit$summary.fitted.values[, c("mean", "0.025quant", "0.975quant")] %>%
cbind(fits$dat$data[,c("Missing",  "Year")]) %>%
filter(imputed_idx)
mix <- imputed %>%
full_join(missing_weights, by = c("Missing")) %>%
mutate(p_mean = p_sites * mean
)  %>% select(Year, Missing, p_mean)
mix_mean <- mix %>%
right_join(years_to_include, by = c("Year", "Missing")) %>%
spread(Missing, p_mean) %>%
mutate(
mean = apply(.[,2:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
}),
model = fit$model
)
a <- inla.posterior.sample(result = fit$fit, n = 1000)
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(
sampleno = rep(1:1000, each = sum(imputed_idx)),
sample_prev = map2_dbl(mean_size, prev, function(size, prev) {
rbinom(1, size, prev)/size
}),
p_mean = p_sites * sample_prev
) %>%
select(-prev, -n_sites, -p_sites, - sample_prev, -mean_size) %>%
right_join(years_to_include, by = c("Year", "Missing"))
b <- samples %>% spread(Missing, p_mean) %>%
mutate(mean_mix = apply(.[,3:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
})) %>%
group_by(Year) %>%
nest() %>%
mutate(
cdf = map(data, function(d) {
if (is.na(d$mean_mix[1])) return(NA)
ecdf(d$mean_mix)
}),
lower = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.025)
}),
upper = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.975)
}),
lower2 = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.05)
}),
upper2 = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.95)
})) %>%
unnest(upper, lower) %>%
select(Year, upper, lower, upper2, lower2) %>%
full_join(mix_mean)
})
predicted <- map_df(fits$fits, function(fit){
imputed <- fit$fit$summary.fitted.values[, c("mean", "0.025quant", "0.975quant")] %>%
cbind(fits$dat$data[,c("Missing",  "Year")]) %>%
filter(imputed_idx)
mix <- imputed %>%
full_join(missing_weights, by = c("Missing")) %>%
mutate(p_mean = p_sites * mean
)  %>% select(Year, Missing, p_mean)
mix_mean <- mix %>%
right_join(years_to_include, by = c("Year", "Missing")) %>%
spread(Missing, p_mean) %>%
mutate(
mean = apply(.[,2:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
}),
model = fit$model
)
a <- inla.posterior.sample(result = fit$fit, n = 1000)
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(
sampleno = rep(1:1000, each = sum(imputed_idx)),
sample_prev = map2_dbl(mean_size, prev, function(size, prev) {
rbinom(1, size, prev)/size
}),
p_mean = p_sites * sample_prev
) %>%
select(-prev, -n_sites, -p_sites, - sample_prev, -mean_size) %>%
right_join(years_to_include, by = c("Year", "Missing"))
b <- samples %>% spread(Missing, p_mean) %>%
mutate(mean_mix = apply(.[,3:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
})) %>%
group_by(Year) %>%
nest() %>%
mutate(
cdf = map(data, function(d) {
if (is.na(d$mean_mix[1])) return(NA)
ecdf(d$mean_mix)
}),
lower = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.025)
}),
upper = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.975)
}),
lower2 = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.05)
}),
upper2 = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.95)
})) %>%
unnest(upper, lower) %>%
select(Year, upper, lower, upper2, lower2) %>%
full_join(mix_mean)
})
estimates <- map_df(fits$fits, function(f){
f$fit$summary.fitted.values[, c("mean", "0.025quant", "0.975quant")] %>%
cbind(fits$dat$data[,c("Missing",  "Year")]) %>%
filter(imputed_idx) %>%
select(Missing, Year, mean) %>%
mutate(model = f$model)
}) %>%
right_join(years_to_include, by = c("Year", "Missing"))
p <- ggplot(fits$dat$data, aes(x = Year)) +
geom_point(aes(y = prev, color = Missing), alpha = 0.5) +
geom_line(data = estimates, aes(y = mean, color = Missing)) +
geom_line(data = predicted, aes(y = mean)) +
facet_wrap(~model) +
geom_ribbon(data = predicted, aes(ymin = lower, ymax = upper),
alpha = 0.2) +
geom_ribbon(data = predicted, aes(ymin = lower2, ymax = upper2),
alpha = 0.2) +
theme_minimal() +
labs(title = "Prediction for new site")
p
knitr::opts_chunk$set(echo = TRUE, eval = FALSE)
library(tidyverse)
metadata <- read_csv("../Data/RC_2017-02_metadata.csv",
col_types = "cccciiciiiiic")
library(tidyverse)
metadata <- read_csv("../Data/RC_2017-02_metadata.csv",
col_types = "cccciiciiiiic")
head(metadata)
library(tidyverse)
metadata <- read_csv("../Data/RC_2017-02_features.csv")
knitr::kable(features[1:10,1:20]
knitr::kable(features[1:10,1:20]
knitr::kable(features[1:10,1:20]
)
?kableExtra
install.packages("kableExtra")
?scroll_box
library(kableExtra)
?scroll_box
library(lme4)
?intervals
install.packages(c("backports", "boot", "crayon", "curl", "data.table", "dplyr", "ggrepel", "Matrix", "MCMCglmm", "mgcv", "openNLPdata", "openssl", "psych", "purrr", "Rcpp", "reticulate", "rJava", "rstudioapi", "textshape", "tidyr", "tidyselect", "tidytext"))
setwd("~/Box Sync/Fall 2017/SoDA 502/502_Project/Code")
library(tidyverse)
library(data.table)
library(magrittr)
file <- "../Data/RC_2017-02"
authors <- read_csv("../Data/all_authors.csv")
View(authors)
?fread
text <- fread("RC_feb17_subset", nrows=10)
text <- fread("../Data/RC_feb17_subset", nrows=10)
text <- fread("../Data/RC_feb17_subset.csv", nrows=10)
View(text)
text <- fread("../Data/RC_feb17_subset.csv", select=c("author", "body"))
bots <- read_csv("../Data/bot_list.csv")
setdiff(authors$author, bots$Username)
intersect(authors$author, bots$Username)
known_bots <- read_csv("../Data/bot_list.csv") %>% pull(Username)
metadata <- fread(paste0(file, "_metadata.csv"), select = c("id", "author"))
intersect(metadata$auhor, known_bots)
known_bots
metadata$author
file
metadata <- fread(paste0(file, "_features.csv"), select = c("id", "author"))
file
metadata <- fread(paste0(file, "_metadata.csv"), select = c("id", "author"))
intersect(metadata$author, known_bots)
text <- read_csv("../Data/subreddits_text.csv")
authors <- setdiff(authors, known_bots)
authors <- authors %>% filter(!(author %in% known_bots))
text <- text %>% filter(author %in% authors$author)
View(text)
write_csv(text, "subreddits_text.csv")
View(text %>% arrange(author))
