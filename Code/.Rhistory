}
run_fits <- function(name, modeldf, zeros=FALSE){
dat <- setupDF(c_names_files[[name]], zeros=zeros)
year.cutoff = c_year_cutoff[[name]]
dat$data$Missing <- pattern_indicator(dat$data, year.cutoff)
dat$data <- rbind(dat$data, imputed_data(dat$data))
dat$data$Z <- as.numeric(dat$data$Missing)-1
fits <- apply(modeldf, 1, function(row, dat){
knots <- c(row[[4]], row[[5]])
if (knots[1]==knots[2]) knots <- knots[1] #mali
fit <- switch(row[[3]],
`1`=model1(dat$data, knots=knots),
`2`=model2(dat$data, knots=knots),
`3`=model3(dat$data, knots=knots),
`4`=model4(dat$data, knots=knots))
list(fit=fit,
knots=knots,
model=as.character(row[[1]]))
}, dat)
list(fits = fits, dat = dat)
}
#This plots a figure comparing all models given by modeldf.
plot_fit_comparisons <- function(name, modeldf, zeros=FALSE){
fits <- run_fits(name, modeldf, zeros)
plot_model_comparison(fits$dat, c_year_cutoff[[name]], title=name, fits$fits)
}
find_conf_bound <- function(year, prev, n, prop, groups){
if (sum(!is.na(prev)) <= 1) {
upper <- lower <- as.numeric(NA)
} else {
cdf <- pmap_df(list(n, prev, prop, groups), function(ni, previ, propi, gi){
if (!is.na(previ)){
tibble(
prob = dbinom(0:ni, ni, previ),
group = gi,
prev = 0:ni/ni
) %>%
arrange(prev) %>%
mutate(
cdf = cumsum(prob),
p_cdf = propi*cdf
)
}
}) %>%
select(-cdf, -prob) %>%
spread(group, p_cdf) %>%
arrange(prev) %>%
mutate(
mix_cdf = sapply(1:nrow(.), function(i){
g_cols <- 2:ncol(.)
sum(sapply(g_cols, function(g){
max(.[1:i, g], na.rm = T)
}))
})
)
lower <- cdf$mix_cdf <= 0.025
upper <- cdf$mix_cdf >= 0.975
lower <- ifelse(sum(lower) > 0, max(cdf$prev[lower]), cdf$prev[1])
upper <- ifelse(upper[nrow(cdf)], min(cdf$prev[upper]), 1)
}
names(lower) <- "lower"
names(upper) <- "upper"
return(c(lower, upper))
}
predictive_distn <- function(name, modeldf, zeros=FALSE){
fits <- run_fits(name, modeldf, zeros)
imputed_idx <- fits$dat$data$Site == "Imputed Site"
missing_weights <- fits$dat$data %>%
filter(Site != "Imputed Site") %>%
group_by(Missing) %>%
summarise(n_sites = Site %>% unique %>% length) %>%
# summarise(n_sites = n()) %>%
ungroup() %>%
mutate(p_sites = n_sites/sum(n_sites),
Missing = as.character(Missing))
fits$dat$data$Missing <- as.character(fits$dat$data$Missing)
years_to_include <- fits$dat$data %>%
filter(Year != 1980, HIV.p > 0, Site != "Imputed Site") %>%
select(Year, Missing) %>% unique
predicted <- map_df(fits$fits, function(fit){
imputed <- fit$fit$summary.fitted.values[, c("mean", "0.025quant", "0.975quant")] %>%
cbind(fits$dat$data[,c("Missing",  "Year")]) %>%
filter(imputed_idx)
mix <- imputed %>%
full_join(missing_weights, by = c("Missing")) %>%
mutate(p_mean = p_sites * mean
)  %>% select(Year, Missing, p_mean)
mix_mean <- mix %>%
right_join(years_to_include, by = c("Year", "Missing")) %>%
spread(Missing, p_mean) %>%
mutate(
mean = apply(.[,2:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
}),
model = fit$model
)
a <- inla.posterior.sample(result = fit$fit, n = 1000)
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(sampleno = rep(1:1000, each = sum(imputed_idx)),
p_mean = p_sites * prev) %>%
select(-prev, -n_sites, -p_sites) %>%
right_join(years_to_include, by = c("Year", "Missing"))
b <- samples %>% spread(Missing, p_mean) %>%
mutate(mean_mix = apply(.[,3:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
})) %>%
group_by(Year) %>%
nest() %>%
mutate(
cdf = map(data, function(d) {
if (is.na(d$mean_mix[1])) return(NA)
ecdf(d$mean_mix)
}),
lower = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.025)
}),
upper = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.975)
}),
lower2 = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.05)
}),
upper2 = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.95)
})) %>%
unnest(upper, lower) %>%
select(Year, upper, lower, upper2, lower2) %>%
full_join(mix_mean)
})
estimates <- map_df(fits$fits, function(f){
f$fit$summary.fitted.values[, c("mean", "0.025quant", "0.975quant")] %>%
cbind(fits$dat$data[,c("Missing",  "Year")]) %>%
filter(imputed_idx) %>%
select(Missing, Year, mean) %>%
mutate(model = f$model)
}) %>%
right_join(years_to_include, by = c("Year", "Missing"))
p <- ggplot(fits$dat$data, aes(x = Year)) +
geom_point(aes(y = prev, color = Missing), alpha = 0.5) +
geom_line(data = estimates, aes(y = mean, color = Missing)) +
geom_line(data = predicted, aes(y = mean)) +
facet_wrap(~model) +
geom_ribbon(data = predicted, aes(ymin = lower, ymax = upper),
alpha = 0.2) +
geom_ribbon(data = predicted, aes(ymin = lower2, ymax = upper2),
alpha = 0.2) +
theme_minimal() +
labs(title = "Prediction for new site")
return(list(plot = p, table = missing_weights))
}
name <- "Botswana"
df <- print_comparison_df(name)
zeros = T
modeldf <- df$df
fits <- run_fits(name, modeldf, zeros)
fits <- run_fits(name, modeldf, zeros)
imputed_idx <- fits$dat$data$Site == "Imputed Site"
missing_weights <- fits$dat$data %>%
filter(Site != "Imputed Site") %>%
group_by(Missing) %>%
summarise(n_sites = Site %>% unique %>% length) %>%
# summarise(n_sites = n()) %>%
ungroup() %>%
mutate(p_sites = n_sites/sum(n_sites),
Missing = as.character(Missing))
fits$dat$data$Missing <- as.character(fits$dat$data$Missing)
years_to_include <- fits$dat$data %>%
filter(Year != 1980, HIV.p > 0, Site != "Imputed Site") %>%
select(Year, Missing) %>% unique
missing_weights <- fits$dat$data %>%
filter(Site != "Imputed Site") %>%
group_by(Missing) %>%
summarise(
n_sites = Site %>% unique %>% length,
mean_size = mean(size)) %>%
# summarise(n_sites = n()) %>%
ungroup() %>%
mutate(p_sites = n_sites/sum(n_sites),
Missing = as.character(Missing))
fit <- fits$fits[[1]]
imputed <- fit$fit$summary.fitted.values[, c("mean", "0.025quant", "0.975quant")] %>%
cbind(fits$dat$data[,c("Missing",  "Year")]) %>%
filter(imputed_idx)
mix <- imputed %>%
full_join(missing_weights, by = c("Missing")) %>%
mutate(p_mean = p_sites * mean
)  %>% select(Year, Missing, p_mean)
mix_mean <- mix %>%
right_join(years_to_include, by = c("Year", "Missing")) %>%
spread(Missing, p_mean) %>%
mutate(
mean = apply(.[,2:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
}),
model = fit$model
)
a <- inla.posterior.sample(result = fit$fit, n = 1000)
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(sampleno = rep(1:1000, each = sum(imputed_idx)),
p_mean = p_sites * prev)
View(samples)
missing_weights <- fits$dat$data %>%
filter(Site != "Imputed Site") %>%
group_by(Missing) %>%
summarise(
n_sites = Site %>% unique %>% length,
mean_size = mean(size, na.rm = T)) %>%
# summarise(n_sites = n()) %>%
ungroup() %>%
mutate(p_sites = n_sites/sum(n_sites),
Missing = as.character(Missing))
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(sampleno = rep(1:1000, each = sum(imputed_idx)),
p_mean = p_sites * prev)
missing_weights <- fits$dat$data %>%
filter(Site != "Imputed Site") %>%
group_by(Missing) %>%
summarise(
n_sites = Site %>% unique %>% length,
mean_size = mean(size, na.rm = T) %>% round) %>%
# summarise(n_sites = n()) %>%
ungroup() %>%
mutate(p_sites = n_sites/sum(n_sites),
Missing = as.character(Missing))
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(sampleno = rep(1:1000, each = sum(imputed_idx)),
p_mean = p_sites * prev)
?rbinom
rbinom(449, 449, 0.08409441) %>% View
rbinom(449, 449, 0.08409441) %>% View %>% sum() %>% `/`(449)
rbinom(449, 449, 0.08409441) %>% sum() %>% `/`(449)
rbinom(449, 449, 0.08409441) %>% sum()
rbinom(1, 449, 0.08409441)
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(
sampleno = rep(1:1000, each = sum(imputed_idx)),
sample_prev = map2_dbl(mean_size, prev, function(size, prev) {
rbinom(1, size, prev)/size
}
))
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(
sampleno = rep(1:1000, each = sum(imputed_idx)),
sample_prev = map2_dbl(mean_size, prev, function(size, prev) {
rbinom(1, size, prev)/size
}),
p_mean = p_sites * sample_prev
) %>%
select(-prev, -n_sites, -p_sites, - sample_prev) %>%
right_join(years_to_include, by = c("Year", "Missing"))
b <- samples %>% spread(Missing, p_mean) %>%
mutate(mean_mix = apply(.[,3:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
}))
View(b)
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(
sampleno = rep(1:1000, each = sum(imputed_idx)),
sample_prev = map2_dbl(mean_size, prev, function(size, prev) {
rbinom(1, size, prev)/size
}),
p_mean = p_sites * sample_prev
) %>%
select(-prev, -n_sites, -p_sites, - sample_prev, -mean_size) %>%
right_join(years_to_include, by = c("Year", "Missing"))
b <- samples %>% spread(Missing, p_mean) %>%
mutate(mean_mix = apply(.[,3:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
}))
predicted <- map_df(fits$fits, function(fit){
imputed <- fit$fit$summary.fitted.values[, c("mean", "0.025quant", "0.975quant")] %>%
cbind(fits$dat$data[,c("Missing",  "Year")]) %>%
filter(imputed_idx)
mix <- imputed %>%
full_join(missing_weights, by = c("Missing")) %>%
mutate(p_mean = p_sites * mean
)  %>% select(Year, Missing, p_mean)
mix_mean <- mix %>%
right_join(years_to_include, by = c("Year", "Missing")) %>%
spread(Missing, p_mean) %>%
mutate(
mean = apply(.[,2:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
}),
model = fit$model
)
a <- inla.posterior.sample(result = fit$fit, n = 1000)
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(
sampleno = rep(1:1000, each = sum(imputed_idx)),
sample_prev = map2_dbl(mean_size, prev, function(size, prev) {
rbinom(1, size, prev)/size
}),
p_mean = p_sites * sample_prev
) %>%
select(-prev, -n_sites, -p_sites, - sample_prev, -mean_size) %>%
right_join(years_to_include, by = c("Year", "Missing"))
b <- samples %>% spread(Missing, p_mean) %>%
mutate(mean_mix = apply(.[,3:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
})) %>%
group_by(Year) %>%
nest() %>%
mutate(
cdf = map(data, function(d) {
if (is.na(d$mean_mix[1])) return(NA)
ecdf(d$mean_mix)
}),
lower = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.025)
}),
upper = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.975)
}),
lower2 = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.05)
}),
upper2 = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.95)
})) %>%
unnest(upper, lower) %>%
select(Year, upper, lower, upper2, lower2) %>%
full_join(mix_mean)
})
predicted <- map_df(fits$fits, function(fit){
imputed <- fit$fit$summary.fitted.values[, c("mean", "0.025quant", "0.975quant")] %>%
cbind(fits$dat$data[,c("Missing",  "Year")]) %>%
filter(imputed_idx)
mix <- imputed %>%
full_join(missing_weights, by = c("Missing")) %>%
mutate(p_mean = p_sites * mean
)  %>% select(Year, Missing, p_mean)
mix_mean <- mix %>%
right_join(years_to_include, by = c("Year", "Missing")) %>%
spread(Missing, p_mean) %>%
mutate(
mean = apply(.[,2:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
}),
model = fit$model
)
a <- inla.posterior.sample(result = fit$fit, n = 1000)
samples <- map_df(a, function(a){
fits$dat$data[,c("Missing", "Year")] %>%
cbind(prev = exp(a$latent[1:nrow(.)])/(exp(a$latent[1:nrow(.)]) + 1)) %>%
filter(imputed_idx)
}) %>%
full_join(missing_weights, by = "Missing") %>%
mutate(
sampleno = rep(1:1000, each = sum(imputed_idx)),
sample_prev = map2_dbl(mean_size, prev, function(size, prev) {
rbinom(1, size, prev)/size
}),
p_mean = p_sites * sample_prev
) %>%
select(-prev, -n_sites, -p_sites, - sample_prev, -mean_size) %>%
right_join(years_to_include, by = c("Year", "Missing"))
b <- samples %>% spread(Missing, p_mean) %>%
mutate(mean_mix = apply(.[,3:ncol(.)], 1, function(pmeans){
if (sum(!is.na(pmeans)) <= 1){
return(NA)
}   else {
sum(pmeans, na.rm = T)
}
})) %>%
group_by(Year) %>%
nest() %>%
mutate(
cdf = map(data, function(d) {
if (is.na(d$mean_mix[1])) return(NA)
ecdf(d$mean_mix)
}),
lower = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.025)
}),
upper = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.975)
}),
lower2 = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.05)
}),
upper2 = map_dbl(cdf, function(cdfnum){
if (is.na(cdfnum)) return(NA)
quantile(cdfnum, probs = 0.95)
})) %>%
unnest(upper, lower) %>%
select(Year, upper, lower, upper2, lower2) %>%
full_join(mix_mean)
})
estimates <- map_df(fits$fits, function(f){
f$fit$summary.fitted.values[, c("mean", "0.025quant", "0.975quant")] %>%
cbind(fits$dat$data[,c("Missing",  "Year")]) %>%
filter(imputed_idx) %>%
select(Missing, Year, mean) %>%
mutate(model = f$model)
}) %>%
right_join(years_to_include, by = c("Year", "Missing"))
p <- ggplot(fits$dat$data, aes(x = Year)) +
geom_point(aes(y = prev, color = Missing), alpha = 0.5) +
geom_line(data = estimates, aes(y = mean, color = Missing)) +
geom_line(data = predicted, aes(y = mean)) +
facet_wrap(~model) +
geom_ribbon(data = predicted, aes(ymin = lower, ymax = upper),
alpha = 0.2) +
geom_ribbon(data = predicted, aes(ymin = lower2, ymax = upper2),
alpha = 0.2) +
theme_minimal() +
labs(title = "Prediction for new site")
p
setwd("~/Box Sync/Fall 2017/SoDA 502/502_Project/Code")
?mutate_at
library(dplyr)
?mutate_at
a <- features %>%  #%>%
group_by(author) %>%
mutate_at(feature_cols, mean, na.rm = TRUE) %>%
ungroup()
?order
?arrange
a <- a %>% arrange(ft) %>% mutate(order = 1:nrow(.))
?relevel
?map
library(forcats)
?fct_recode
?left_join
?ggsave
library(ggplot2)
?ggsave
colnames(features)
