rownames(s$latent[nrow(dat$data):nrow(s$latent)])
names(s$latent[nrow(dat$data):nrow(s$latent)])
est <- tibble(link = s$latent[1:nrow(fits$dat$data),]) %>%
cbind(fits$dat$data %>% select(Site, Year, Missing))
View(est)
s$hyperpar
s$latent
getOption("max.print")
setOption(max.print = 5000)
?getOption
options(max.print = 5000)
s$latent
modeldf
fit <- fits$fits[[2]]
samples <- inla.posterior.sample(result = fit$fit, n = 1000)
s <- samples[[1]]
est <- tibble(link = s$latent[1:nrow(fits$dat$data),]) %>%
cbind(fits$dat$data %>% select(Site, Year, Missing)) %>%
spread(Missing, link)
s$latent
est <- tibble(link = s$latent[1:nrow(fits$dat$data),]) %>%
cbind(fits$dat$data %>% select(Site, Year, Missing)) %>%
spread(Missing, link)
if ("Early" %in% colnames(est)) {
est$Early[est$Year >= c_year_cutoff[[name]]] <- NA
est$EarlyvComplete <- est$Early - est$Complete
}
if ("Late" %in% colnames(est)) {
est$Late[est$Year < c_year_cutoff[[name]]] <- NA
est$LatevComplete <- est$Late - est$Complete
}
fit$fit$model.matrix
fit$fit$model.matrix %>% colnames
fit$fit$model.random
s
cols <- NA
cols <- c(cols, "LA")
cols
cols <- NULL
cols <- c(cols, "LA")
cols
samples <- inla.posterior.sample(result = fit$fit,
n = 10000, seed = 0918)
samples <- inla.posterior.sample(result = fit$fit,
n = 10000, seed = 0918)
estimates <- map_df(samples, function(s){
#separate samples by missing patterns and get differences
est <- tibble(link = s$latent[1:nrow(fits$dat$data),]) %>%
cbind(fits$dat$data %>% select(Site, Year, Missing)) %>%
spread(Missing, link)
cols <- c("Site", "Year")
if ("Early" %in% colnames(est)) { #only compare complete to early/late
est$Early[est$Year >= c_year_cutoff[[name]]] <- NA
est$EarlyvComplete <- est$Early - est$Complete
cols <- c(cols, "EarlyvComplete")
}
if ("Late" %in% colnames(est)) {
est$Late[est$Year < c_year_cutoff[[name]]] <- NA
est$LatevComplete <- est$Late - est$Complete
cols <- c(cols, "LatevComplete")
}
est[,cols]
})
head(est)
head(estimates)
?quantile
cols <- setdiff(unique(fits$dat$data$Missing), "Complete")
cols
?summarise_at
?quantile
quantiles <- estimates %>%
group_by(Year) %>%
summarise_at(cols, quantile, probs = c(0.025, 0.5, 0.975))
cols
cols <- map_chr(setdiff(unique(fits$dat$data$Missing), "Complete"), function(m) paste0(m, "vComplete"))
cols
quantiles <- estimates %>%
group_by(Year) %>%
summarise_at(cols, quantile, probs = c(0.025, 0.5, 0.975))
quantile(estimates$EarlyvComplete, probs = c(0.025, 0.5, 0.975))
quantile(estimates$EarlyvComplete, probs = c(0.025, 0.5, 0.975), na.rm = T)
?summarise_at
?gather
if (length(cols) > 1) estimates <- estimates %>% gather("Comparison", "link", cols)
quantiles <- estimates %>%
group_by(Year, Comparison) %>%
summarise_at(cols, quantile, probs = c(0.025, 0.5, 0.975), na.rm = T)
quantiles <- estimates %>%
group_by(Year, Comparison) %>%
summarise(upper = quantile(link, probs = c(0.975), na.rm = T),
lower = quantile(link, probs = c(0.025), na.rm = T),
median = quantile(link, probs = c(0.5), na.rm = T)
)
View(quantiles)
quantiles <- quantiles %>% filter(!is.na(upper))
quantiles
ggplot(quantiles, aes(x = Year, y = median, group = Comparison)) +
geom_line() +
geom_path(aes(ymin = lower, ymax = upper)) +
theme_minimal()
?geom_area
ggplot(quantiles, aes(x = Year, y = median, group = Comparison)) +
geom_line() +
geom_ribbon(aes(ymin = lower, ymax = upper)) +
theme_minimal()
ggplot(quantiles, aes(x = Year, y = median, group = Comparison)) +
geom_line() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
theme_minimal()
ggplot(quantiles, aes(x = Year, y = median, group = Comparison, color = Missing)) +
geom_line() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
geom_point(data = fits$dat$data, aes(y = prev, group = NULL)) +
theme_minimal()
ggplot(quantiles, aes(x = Year, y = median, group = Comparison)) +
geom_line() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
geom_point(data = fits$dat$data, aes(y = prev, group = NULL, color = Missing)) +
theme_minimal()
ggplot(quantiles, aes(x = Year, y = median, group = Comparison)) +
geom_line() +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
theme_minimal()
ggplot(quantiles, aes(x = Year, y = median, group = Comparison)) +
geom_line(aes(color = Comparison)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
theme_minimal()
ggplot(quantiles, aes(x = Year, y = median, group = Comparison)) +
geom_line(aes(color = Comparison)) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
theme_minimal()
ggplot(quantiles, aes(x = Year, y = median, group = Comparison)) +
geom_line(aes(color = Comparison), size = 2) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
theme_minimal()
fit <- fits$fits[[1]]
fit$model
bymodel <- map(fits$fits, function(fit){
set.seed(1117)
samples <- inla.posterior.sample(result = fit$fit,
n = 10000, seed = 0918)
#get dataframe with estimates of differences between values when
#sites are missing early, late, or are complete
estimates <- map_df(samples, function(s){
#separate samples by missing patterns and get differences
est <- tibble(link = s$latent[1:nrow(fits$dat$data),]) %>%
cbind(fits$dat$data %>% select(Site, Year, Missing)) %>%
spread(Missing, link)
cols <- c("Site", "Year")
if ("Early" %in% colnames(est)) { #only compare complete to early/late
est$Early[est$Year >= c_year_cutoff[[name]]] <- NA
est$EarlyvComplete <- est$Early - est$Complete
cols <- c(cols, "EarlyvComplete")
}
if ("Late" %in% colnames(est)) {
est$Late[est$Year < c_year_cutoff[[name]]] <- NA
est$LatevComplete <- est$Late - est$Complete
cols <- c(cols, "LatevComplete")
}
est[,cols]
})
cols <- map_chr(setdiff(unique(fits$dat$data$Missing), "Complete"), function(m) paste0(m, "vComplete"))
estimates <- estimates %>% gather("Comparison", "link", cols)
quantiles <- estimates %>%
group_by(Year, Comparison) %>%
summarise(upper = quantile(link, probs = c(0.975), na.rm = T),
lower = quantile(link, probs = c(0.025), na.rm = T),
median = quantile(link, probs = c(0.5), na.rm = T)
) %>% filter(!is.na(upper))
quantiles %>% cbind(model = fit$model)
})
ggplot(bymodel, aes(x = Year, y = median, group = Comparison)) +
geom_line(aes(color = Comparison), size = 2) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
facet_wrap(~model, scales = "free_y") +
theme_minimal()
bymodel <- map(fits$fits, function(fit){
m <- fit$model
set.seed(1117)
samples <- inla.posterior.sample(result = fit$fit,
n = 10000, seed = 0918)
#get dataframe with estimates of differences between values when
#sites are missing early, late, or are complete
estimates <- map_df(samples, function(s){
#separate samples by missing patterns and get differences
est <- tibble(link = s$latent[1:nrow(fits$dat$data),]) %>%
cbind(fits$dat$data %>% select(Site, Year, Missing)) %>%
spread(Missing, link)
cols <- c("Site", "Year")
if ("Early" %in% colnames(est)) { #only compare complete to early/late
est$Early[est$Year >= c_year_cutoff[[name]]] <- NA
est$EarlyvComplete <- est$Early - est$Complete
cols <- c(cols, "EarlyvComplete")
}
if ("Late" %in% colnames(est)) {
est$Late[est$Year < c_year_cutoff[[name]]] <- NA
est$LatevComplete <- est$Late - est$Complete
cols <- c(cols, "LatevComplete")
}
est[,cols]
})
cols <- map_chr(setdiff(unique(fits$dat$data$Missing), "Complete"), function(m) paste0(m, "vComplete"))
estimates <- estimates %>% gather("Comparison", "link", cols)
quantiles <- estimates %>%
group_by(Year, Comparison) %>%
summarise(upper = quantile(link, probs = c(0.975), na.rm = T),
lower = quantile(link, probs = c(0.025), na.rm = T),
median = quantile(link, probs = c(0.5), na.rm = T)
) %>% filter(!is.na(upper))
quantiles %>% cbind(model = m)
})
fit <- fits$fits[[1]]
m <- fit$model
set.seed(1117)
samples <- inla.posterior.sample(result = fit$fit,
n = 10000, seed = 0918)
m
samples <- inla.posterior.sample(result = fit$fit,
n = 10000, seed = 0918)
estimates <- map_df(samples, function(s){
#separate samples by missing patterns and get differences
est <- tibble(link = s$latent[1:nrow(fits$dat$data),]) %>%
cbind(fits$dat$data %>% select(Site, Year, Missing)) %>%
spread(Missing, link)
cols <- c("Site", "Year")
if ("Early" %in% colnames(est)) { #only compare complete to early/late
est$Early[est$Year >= c_year_cutoff[[name]]] <- NA
est$EarlyvComplete <- est$Early - est$Complete
cols <- c(cols, "EarlyvComplete")
}
if ("Late" %in% colnames(est)) {
est$Late[est$Year < c_year_cutoff[[name]]] <- NA
est$LatevComplete <- est$Late - est$Complete
cols <- c(cols, "LatevComplete")
}
est[,cols]
})
cols <- map_chr(setdiff(unique(fits$dat$data$Missing), "Complete"), function(m) paste0(m, "vComplete"))
estimates <- estimates %>% gather("Comparison", "link", cols)
quantiles <- estimates %>%
group_by(Year, Comparison) %>%
summarise(upper = quantile(link, probs = c(0.975), na.rm = T),
lower = quantile(link, probs = c(0.025), na.rm = T),
median = quantile(link, probs = c(0.5), na.rm = T)
) %>% filter(!is.na(upper))
m
a <- quantiles %>% cbind(model = m)
quantiles
m
model = m
model
a <- quantiles %>% cbind(tibble(model = m))
a
a <- quantiles %>% mutate(model = m)
a
bymodel <- map(fits$fits, function(fit){
m <- fit$model
set.seed(1117)
samples <- inla.posterior.sample(result = fit$fit,
n = 10000, seed = 0918)
#get dataframe with estimates of differences between values when
#sites are missing early, late, or are complete
estimates <- map_df(samples, function(s){
#separate samples by missing patterns and get differences
est <- tibble(link = s$latent[1:nrow(fits$dat$data),]) %>%
cbind(fits$dat$data %>% select(Site, Year, Missing)) %>%
spread(Missing, link)
cols <- c("Site", "Year")
if ("Early" %in% colnames(est)) { #only compare complete to early/late
est$Early[est$Year >= c_year_cutoff[[name]]] <- NA
est$EarlyvComplete <- est$Early - est$Complete
cols <- c(cols, "EarlyvComplete")
}
if ("Late" %in% colnames(est)) {
est$Late[est$Year < c_year_cutoff[[name]]] <- NA
est$LatevComplete <- est$Late - est$Complete
cols <- c(cols, "LatevComplete")
}
est[,cols]
})
cols <- map_chr(setdiff(unique(fits$dat$data$Missing), "Complete"), function(m) paste0(m, "vComplete"))
estimates <- estimates %>% gather("Comparison", "link", cols)
quantiles <- estimates %>%
group_by(Year, Comparison) %>%
summarise(upper = quantile(link, probs = c(0.975), na.rm = T),
lower = quantile(link, probs = c(0.025), na.rm = T),
median = quantile(link, probs = c(0.5), na.rm = T)
) %>% filter(!is.na(upper))
quantiles %>% mutate(model = m)
})
ggplot(bymodel, aes(x = Year, y = median, group = Comparison)) +
geom_line(aes(color = Comparison), size = 2) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
facet_wrap(~model, scales = "free_y") +
theme_minimal()
View(bymodel)
bymodel <- map(fits$fits, function(fit){
m <- fit$model
set.seed(1117)
samples <- inla.posterior.sample(result = fit$fit,
n = 10000, seed = 0918)
#get dataframe with estimates of differences between values when
#sites are missing early, late, or are complete
estimates <- map_df(samples, function(s){
#separate samples by missing patterns and get differences
est <- tibble(link = s$latent[1:nrow(fits$dat$data),]) %>%
cbind(fits$dat$data %>% select(Site, Year, Missing)) %>%
spread(Missing, link)
cols <- c("Site", "Year")
if ("Early" %in% colnames(est)) { #only compare complete to early/late
est$Early[est$Year >= c_year_cutoff[[name]]] <- NA
est$EarlyvComplete <- est$Early - est$Complete
cols <- c(cols, "EarlyvComplete")
}
if ("Late" %in% colnames(est)) {
est$Late[est$Year < c_year_cutoff[[name]]] <- NA
est$LatevComplete <- est$Late - est$Complete
cols <- c(cols, "LatevComplete")
}
est[,cols]
})
cols <- map_chr(setdiff(unique(fits$dat$data$Missing), "Complete"), function(m) paste0(m, "vComplete"))
estimates <- estimates %>% gather("Comparison", "link", cols)
quantiles <- estimates %>%
group_by(Year, Comparison) %>%
summarise(upper = quantile(link, probs = c(0.975), na.rm = T),
lower = quantile(link, probs = c(0.025), na.rm = T),
median = quantile(link, probs = c(0.5), na.rm = T)
) %>% filter(!is.na(upper)) %>%
mutate(model = m) %>%
ungroup()
})
bymodel <- map(fits$fits, function(fit){
m <- fit$model
set.seed(1117)
samples <- inla.posterior.sample(result = fit$fit,
n = 100, seed = 0918)
#get dataframe with estimates of differences between values when
#sites are missing early, late, or are complete
estimates <- map_df(samples, function(s){
#separate samples by missing patterns and get differences
est <- tibble(link = s$latent[1:nrow(fits$dat$data),]) %>%
cbind(fits$dat$data %>% select(Site, Year, Missing)) %>%
spread(Missing, link)
cols <- c("Site", "Year")
if ("Early" %in% colnames(est)) { #only compare complete to early/late
est$Early[est$Year >= c_year_cutoff[[name]]] <- NA
est$EarlyvComplete <- est$Early - est$Complete
cols <- c(cols, "EarlyvComplete")
}
if ("Late" %in% colnames(est)) {
est$Late[est$Year < c_year_cutoff[[name]]] <- NA
est$LatevComplete <- est$Late - est$Complete
cols <- c(cols, "LatevComplete")
}
est[,cols]
})
cols <- map_chr(setdiff(unique(fits$dat$data$Missing), "Complete"), function(m) paste0(m, "vComplete"))
estimates <- estimates %>% gather("Comparison", "link", cols)
quantiles <- estimates %>%
group_by(Year, Comparison) %>%
summarise(upper = quantile(link, probs = c(0.975), na.rm = T),
lower = quantile(link, probs = c(0.025), na.rm = T),
median = quantile(link, probs = c(0.5), na.rm = T)
) %>% filter(!is.na(upper)) %>%
mutate(model = m) %>%
ungroup()
})
View(bymodel)
bymodel <- map_df(fits$fits, function(fit){
m <- fit$model
set.seed(1117)
samples <- inla.posterior.sample(result = fit$fit,
n = 100, seed = 0918)
#get dataframe with estimates of differences between values when
#sites are missing early, late, or are complete
estimates <- map_df(samples, function(s){
#separate samples by missing patterns and get differences
est <- tibble(link = s$latent[1:nrow(fits$dat$data),]) %>%
cbind(fits$dat$data %>% select(Site, Year, Missing)) %>%
spread(Missing, link)
cols <- c("Site", "Year")
if ("Early" %in% colnames(est)) { #only compare complete to early/late
est$Early[est$Year >= c_year_cutoff[[name]]] <- NA
est$EarlyvComplete <- est$Early - est$Complete
cols <- c(cols, "EarlyvComplete")
}
if ("Late" %in% colnames(est)) {
est$Late[est$Year < c_year_cutoff[[name]]] <- NA
est$LatevComplete <- est$Late - est$Complete
cols <- c(cols, "LatevComplete")
}
est[,cols]
})
cols <- map_chr(setdiff(unique(fits$dat$data$Missing), "Complete"), function(m) paste0(m, "vComplete"))
estimates <- estimates %>% gather("Comparison", "link", cols)
quantiles <- estimates %>%
group_by(Year, Comparison) %>%
summarise(upper = quantile(link, probs = c(0.975), na.rm = T),
lower = quantile(link, probs = c(0.025), na.rm = T),
median = quantile(link, probs = c(0.5), na.rm = T)
) %>% filter(!is.na(upper)) %>%
mutate(model = m) %>%
ungroup()
})
ggplot(bymodel, aes(x = Year, y = median, group = Comparison)) +
geom_line(aes(color = Comparison), size = 2) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
facet_wrap(~model, scales = "free_y") +
theme_minimal()
ggplot(bymodel, aes(x = Year, y = median, group = Comparison)) +
geom_line(aes(color = Comparison), size = 2) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
facet_wrap(~model, scales = "free_y") +
theme_minimal() +
theme(legend.position = "bottom")
ggplot(bymodel, aes(x = Year, y = median, group = Comparison)) +
geom_line(aes(color = Comparison), size = 1.5) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
facet_wrap(~model, scales = "free_y") +
theme_minimal() +
theme(legend.position = "bottom")
missingness_confidence <- function(name, modeldf, zeros = FALSE) {
fits <- run_fits(name, modeldf, zeros, additional = T)
bymodel <- map_df(fits$fits, function(fit){
m <- fit$model
set.seed(1117)
samples <- inla.posterior.sample(result = fit$fit,
n = 10000, seed = 0918)
#get dataframe with estimates of differences between values when
#sites are missing early, late, or are complete
estimates <- map_df(samples, function(s){
#separate samples by missing patterns and get differences
est <- tibble(link = s$latent[1:nrow(fits$dat$data),]) %>%
cbind(fits$dat$data %>% select(Site, Year, Missing)) %>%
spread(Missing, link)
cols <- c("Site", "Year")
if ("Early" %in% colnames(est)) { #only compare complete to early/late
est$Early[est$Year >= c_year_cutoff[[name]]] <- NA
est$EarlyvComplete <- est$Early - est$Complete
cols <- c(cols, "EarlyvComplete")
}
if ("Late" %in% colnames(est)) {
est$Late[est$Year < c_year_cutoff[[name]]] <- NA
est$LatevComplete <- est$Late - est$Complete
cols <- c(cols, "LatevComplete")
}
est[,cols]
})
cols <- map_chr(setdiff(unique(fits$dat$data$Missing), "Complete"), function(m) paste0(m, "vComplete"))
estimates <- estimates %>% gather("Comparison", "link", cols)
quantiles <- estimates %>%
group_by(Year, Comparison) %>%
summarise(upper = quantile(link, probs = c(0.975), na.rm = T),
lower = quantile(link, probs = c(0.025), na.rm = T),
median = quantile(link, probs = c(0.5), na.rm = T)
) %>% filter(!is.na(upper)) %>%
mutate(model = m) %>%
ungroup()
})
ggplot(bymodel, aes(x = Year, y = median, group = Comparison)) +
geom_line(aes(color = Comparison), size = 1.5) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
facet_wrap(~model, scales = "free_y") +
theme_minimal() +
theme(legend.position = "bottom")
}
missingness_confidence <- function(name, modeldf, zeros = FALSE) {
fits <- run_fits(name, modeldf, zeros, additional = T)
bymodel <- map_df(fits$fits, function(fit){
m <- fit$model
set.seed(1117)
samples <- inla.posterior.sample(result = fit$fit,
n = 10000, seed = 0918)
#get dataframe with estimates of differences between values when
#sites are missing early, late, or are complete
estimates <- map_df(samples, function(s){
#separate samples by missing patterns and get differences
est <- tibble(link = s$latent[1:nrow(fits$dat$data),]) %>%
cbind(fits$dat$data %>% select(Site, Year, Missing)) %>%
spread(Missing, link)
cols <- c("Site", "Year")
if ("Early" %in% colnames(est)) { #only compare complete to early/late
est$Early[est$Year >= c_year_cutoff[[name]]] <- NA
est$EarlyvComplete <- est$Early - est$Complete
cols <- c(cols, "EarlyvComplete")
}
if ("Late" %in% colnames(est)) {
est$Late[est$Year < c_year_cutoff[[name]]] <- NA
est$LatevComplete <- est$Late - est$Complete
cols <- c(cols, "LatevComplete")
}
est[,cols]
})
cols <- map_chr(setdiff(unique(fits$dat$data$Missing), "Complete"), function(m) paste0(m, "vComplete"))
estimates <- estimates %>% gather("Comparison", "link", cols)
quantiles <- estimates %>%
group_by(Year, Comparison) %>%
summarise(upper = quantile(link, probs = c(0.975), na.rm = T),
lower = quantile(link, probs = c(0.025), na.rm = T),
median = quantile(link, probs = c(0.5), na.rm = T)
) %>% filter(!is.na(upper)) %>%
mutate(model = m) %>%
ungroup()
})
ggplot(bymodel, aes(x = Year, y = median, group = Comparison)) +
geom_line(aes(color = Comparison), size = 1.5) +
geom_ribbon(aes(ymin = lower, ymax = upper), alpha = 0.5) +
facet_wrap(~model, scales = "free_y") +
theme_minimal() +
theme(legend.position = "bottom")
}
